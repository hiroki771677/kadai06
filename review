<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <title>Map&amp;Geolocation</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      width: 100%;
      height: 100%;
    }
  </style>
</head>

<body>

  <!-- MapArea -->
  <div id="view"></div>
  <div id="myMap" style="width:80%;height:100%;"></div>
  <div style="width:20%;float:right;padding-top: 5%;">
    <div id="output"></div>
    <div> 場所：<input type="text" id="uname">レビューを記入</div>
    <div>
        <textarea id="text" cols="30" rows="10" style="width:95%;"></textarea>
        <button id="send">送信</button>
    </div>

</div>
  <!-- /MapArea -->

     <!-- JQuery -->
     <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
     <!-- JQuery -->
 
     <!--** 以下Firebase **-->
     <script type="module">
         // Import the functions you need from the SDKs you need
         import { initializeApp } from "https://www.gstatic.com/firebasejs/9.1.0/firebase-app.js";
 
         // 貼り付ける場所
         import { getDatabase, ref, push, set, onChildAdded, remove, onChildRemoved } from "https://www.gstatic.com/firebasejs/9.1.0/firebase-database.js";
         // 
 
 
         // TODO: Add SDKs for Firebase products that you want to use
         // https://firebase.google.com/docs/web/setup#available-libraries
 
         // Your web app's Firebase configuration
         const firebaseConfig = {

   };
 
 
         // Initialize Firebase
         const app = initializeApp(firebaseConfig);
 
         // この辺りに書いていきます
 
 
         const db = getDatabase(app);
         const dbRef = ref(db, 'dev245');
 
         // 送信処理を記述
         $('#send').on('click', function () {
 
             // id="uname" の場所を取得します🤗
             const uname = $('#uname').val();
             // console.log(uname, 'データの取得の仕方で表示が異なるのをチェックしましょう🤗')
 
             // id="text" の場所を取得します🤗
             const text = $('#text').val();
             // console.log(text, 'データの取得の仕方で表示が異なるのをチェックしましょう🤗')
 
             // 取得できているか表示の確認をしましょう！
             // これ必須！ 表示の確認ができて方はalertをコメントアウトしておきましょう🤗
             // alert(uname + text);
 
 
             // データの塊を作ります🤗
             // msg という名前で塊を作ります
             // unameという鍵の名前
             // textというカギの名前
             // 作成したデータの塊をfirebaseに送信をします⇨つまりこれが保存になります🤗
             const msg = {
                 uname: uname,
                 text: text,
             }
 
             // firebaseに送る準備をしていることになります🤗
             const newPostRef = push(dbRef) //データを送信できる準備
             set(newPostRef, msg); // firebaseの登録できる場所に保存するイメージです🤗
 
             // 送信後に、入力欄を空にしましょう🤗
             $('#uname').val("");
             $('#text').val("");
 
             // これを使うとどうなるかみてみましょう🤗
             $("#uname").focus();
 
             // send送信イベント この下消さない
         });
 
 
         $("#text").on('keydown', function (e) {
             console.log(e, 'イベントのデータの塊')
             console.log(e.keyCode, 'イベントのデータの塊')
             // この下消さない　キーボードを押した時のクリック
         });
 
         // 受信処理を記述
         onChildAdded(dbRef, function (data) {
             // ここからが受信処理が始まります
 
             // 登録されたデータを取得します🤗
             const msg = data.val();
             console.log(msg, '取得したデータの塊')
             const key = data.key;
             console.log(key, 'データの塊にアクセス')
 
 
             // es6のテンプレートリテラル
             let h = `
                 <div class="msg">
                     <p>${msg.uname}</p>
                     <p>${msg.text}</p>
                 </div>    
             `;
             // htmlに埋め込みましょう🤗
             // append();というjqueryのおまじないを使います
            // $("#output").append(h);
         })
 
 
 
         // この間に書いていきます
 
     </script>
 
  <!-- jQuery&GoogleMapsAPI -->
  <script src="https://code.jquery.com/jquery-2.1.4.min.js"></script>
  <script src='https://www.bing.com/api/maps/mapcontrol?callback=GetMap&key=AuQrFmW2xbnHsgV5PfO-ifzWI5Puoaww4yyMe8Uv3JhrVbCd9xSESdW6sK6m92px' async
    defer></script>
  <script src="js/BmapQuery.js"></script>
  <script>
    //****************************************
    //成功関数
    //****************************************
    let map;

    function mapsInit(position) {
      //lat=緯度、lon=経度 を取得
      const lat = position.coords.latitude;
      const lon = position.coords.longitude;

      //Map表示
      map = new Bmap("#myMap");
      map.startMap(lat, lon, "load", 20); //The place is Bellevue.
      //Pinを追加
      let pin = map.pin(lat, lon, "#ff0000");
      //Infoboxを追加
      map.infobox(lat, lon, "タイトル", '<div id="title"></div>');
    };

    //****************************************
    //失敗関数
    //****************************************
    function mapsError(error) {
      let e = "";
      if (error.code == 1) { //1＝位置情報取得が許可されてない（ブラウザの設定）
        e = "位置情報が許可されてません";
      }
      if (error.code == 2) { //2＝現在地を特定できない
        e = "現在位置を特定できません";
      }
      if (error.code == 3) { //3＝位置情報を取得する前にタイムアウトになった場合
        e = "位置情報を取得する前にタイムアウトになりました";
      }
      alert("エラー：" + e);
    };

    
    //****************************************
    //オプション設定
    //****************************************
    const set = {
      enableHighAccuracy: true, //より高精度な位置を求める
      maximumAge: 20000, //最後の現在地情報取得が20秒以内であればその情報を再利用する設定
      timeout: 10000 //10秒以内に現在地情報を取得できなければ、処理を終了
    };

    //最初に実行する関数
    function GetMap() {
      navigator.geolocation.getCurrentPosition(mapsInit, mapsError, set);
    }
  </script>
  

</body>

</html>
